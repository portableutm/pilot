apply plugin: 'com.android.application'

ext.versionMajor = 1
ext.versionMinor = 16
ext.versionPatch = 1
ext.versionClassifier = null
ext.isSnapshot = false
ext.minimumSdkVersion = 26

android {
    compileSdkVersion 30
    buildToolsVersion '29.0.0'
    defaultConfig {
        applicationId "com.dronfieslabs.portableutmpilot"
        minSdkVersion project.ext.minimumSdkVersion
        targetSdkVersion 30
        versionCode generateVersionCode()
        versionName generateVersionName()
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
        // Enabling multidex support.
        multiDexEnabled true
        ndk {
            // On x86 devices that run Android API 23 or above, if the application is targeted with API 23 or
            // above, FFmpeg lib might lead to runtime crashes or warnings.
            abiFilters 'armeabi-v7a', 'x86', 'arm64-v8a', 'x86_64'
        }
    }
    lintOptions {
//        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
    buildTypes {
        release {
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            resValue 'string', 'portableUTMMainEndpoint', '"https://utm.dronfieslabs.com:3000"'
            resValue 'string', 'portableUTMUserInstanceDefaultEndpoint', '""'
        }
        debug {
            debuggable true

            resValue 'string', 'portableUTMMainEndpoint', '"https://utm.dronfieslabs.com:3000"'
            resValue 'string', 'portableUTMUserInstanceDefaultEndpoint', '"http://192.168.250.109:2999"'
        }

    }
    packagingOptions {
        packagingOptions {
            doNotStrip "*/*/libdjivideo.so"
            doNotStrip "*/*/libSDKRelativeJNI.so"
            doNotStrip "*/*/libFlyForbid.so"
            doNotStrip "*/*/libduml_vision_bokeh.so"
            doNotStrip "*/*/libyuv2.so"
            doNotStrip "*/*/libGroudStation.so"
            doNotStrip "*/*/libFRCorkscrew.so"
            doNotStrip "*/*/libUpgradeVerify.so"
            doNotStrip "*/*/libFR.so"
            doNotStrip "*/*/libDJIFlySafeCore.so"
            doNotStrip "*/*/libdjifs_jni.so"
            doNotStrip "*/*/libsfjni.so"
            doNotStrip "*/*/libDJICommonJNI.so"
            doNotStrip "*/*/libDJICSDKCommon.so"
            doNotStrip "*/*/libDJIUpgradeCore.so"
            doNotStrip "*/*/libDJIUpgradeJNI.so"
            doNotStrip "*/*/libDJIWaypointV2Core.so"
            doNotStrip "*/*/libAMapSDK_MAP_v6_9_2.so"
            doNotStrip "*/*/libDJIMOP.so"

            pickFirst 'lib/*/libstlport_shared.so'
            pickFirst 'lib/*/libRoadLineRebuildAPI.so'
            pickFirst 'lib/*/libGNaviUtils.so'
            pickFirst 'lib/*/libGNaviMapex.so'
            pickFirst 'lib/*/libGNaviData.so'
            pickFirst 'lib/*/libGNaviMap.so'
            pickFirst 'lib/*/libGNaviSearch.so'
            pickFirst 'lib/*/libDJIFlySafeCore.so'
            pickFirst 'lib/*/libdjifs_jni.so'
            pickFirst 'lib/*/libsfjni.so'
            exclude 'META-INF/proguard/okhttp3.pro'
            exclude 'META-INF/rxjava.properties'
            pickFirst 'protobuf.meta'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }
}

private Integer generateVersionCode() {
    return ext.minimumSdkVersion * 10000000 + ext.versionMajor * 10000 + ext.versionMinor * 100 + ext.versionPatch
}

private String generateVersionName() {
    String versionName = "${ext.versionMajor}.${ext.versionMinor}.${ext.versionPatch}"
    if (ext.versionClassifier == null && ext.isSnapshot) {
        ext.versionClassifier = "SNAPSHOT"
    }

    if (ext.versionClassifier != null) {
        versionName += "-" + ext.versionClassifier
    }
    return versionName;
}

def githubProperties = new Properties()
githubProperties.load(new FileInputStream(rootProject.file("github.properties")))

repositories {
    maven {
        name = "GitHubPackages"
        /*  Configure path to the library hosted on GitHub Packages Registry
         *  Replace UserID with package owner userID and REPOSITORY with the repository name
         *  e.g. "https://maven.pkg.github.com/enefce/AndroidLibraryForGitHubPackagesDemo"*/

        url = uri("https://maven.pkg.github.com/portableutm/utm-android-sdk")
        credentials {
            username = githubProperties['gpr.usr']
            password = githubProperties['gpr.key']
        }
    }
}

dependencies {

    // socket.io
    implementation ('io.socket:socket.io-client:1.0.0') {
        exclude group: 'org.json', module: 'json'
    }

    // Import the BoM for the Firebase platform
    implementation platform('com.google.firebase:firebase-bom:28.3.1')

    // Declare the dependencies for the Crashlytics and Analytics libraries
    // When using the BoM, you don't specify versions in Firebase library dependencies
    implementation 'com.google.firebase:firebase-crashlytics'
    implementation 'com.google.firebase:firebase-analytics'

    implementation 'com.squareup.okhttp3:okhttp:4.9.0'

    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.google.android.material:material:1.0.0'

    //PUTM SDK
    implementation 'com.dronfies.portableutmandroidclienttest:utm_android_sdk:3.31'


    implementation 'androidx.navigation:navigation-fragment:2.3.5'
    implementation 'androidx.navigation:navigation-ui:2.3.5'
    androidTestImplementation('androidx.test.espresso:espresso-core:3.1.0', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })


    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.multidex:multidex:2.0.0'
    implementation 'androidx.appcompat:appcompat:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.0.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.squareup.picasso:picasso:2.5.2'
    implementation 'com.cloudinary:cloudinary-android:1.24.0'
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'com.firebase:firebase-jobdispatcher:0.5.2'
    implementation 'com.google.firebase:firebase-database:16.0.6'
    implementation 'com.google.firebase:firebase-messaging:17.3.4'
    implementation 'com.firebaseui:firebase-ui-auth:4.3.0'

    testImplementation 'junit:junit:4.12'
    testImplementation "org.mockito:mockito-core:2.+"
    testImplementation 'org.json:json:20180130'

    implementation 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'

    implementation 'com.google.android.gms:play-services-location:16.0.0'
    implementation 'com.google.android.gms:play-services-maps:16.1.0'
    implementation 'com.google.android.gms:play-services-places:16.0.0'

    // DJI
    implementation ('com.dji:dji-uxsdk:4.13', {
        /**
         * Comment the "library-anti-distortion" if your app does need Anti Distortion for Mavic 2 Pro and Mavic 2 Zoom.
         * Comment the "fly-safe-database" if you do not need database for release, or we will download it when DJISDKManager.getInstance().registerApp
         * is called.
         * Both will greatly reducing the size of the APK.
         */
        exclude module: 'library-anti-distortion'
        exclude module: 'fly-safe-database'

        /**
         * Uncomment the following line to exclude amap from the app.
         * Note that Google Play Store does not allow APKs that include this library.
         */
        exclude group: 'com.amap.api'
    })
    implementation ('com.dji:dji-sdk:4.13', {
        /**
         * Uncomment the "library-anti-distortion" if your app does not need Anti Distortion for Mavic 2 Pro and Mavic 2 Zoom.
         * Uncomment the "fly-safe-database" if you need database for release, or we will download it when DJISDKManager.getInstance().registerApp
         * is called.
         * Both will greatly reducing the size of the APK.
         */
        exclude module: 'library-anti-distortion'
        exclude module: 'fly-safe-database'

        /**
         * Uncomment the following line to exclude amap from the app.
         * Note that Google Play Store does not allow APKs that include this library.
         */
        exclude group: 'com.amap.api'
    })
    compileOnly ('com.dji:dji-sdk-provided:4.13')

    implementation 'androidx.appcompat:appcompat:1.0.0'
    implementation 'androidx.core:core:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.recyclerview:recyclerview:1.0.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.0.0-rc01'
    implementation 'androidx.annotation:annotation:1.0.0'
    implementation 'com.jakewharton:butterknife:10.0.0'
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.0.0'
    implementation "androidx.core:core-ktx:1.6.0"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.0.0-rc01"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    implementation 'com.zhihu.android:matisse:0.4.3'
    implementation 'androidx.cardview:cardview:1.0.0'

    // dependency to add gifs to the app
    implementation 'pl.droidsonroids.gif:android-gif-drawable:1.2.19'

    debugImplementation 'com.amitshekhar.android:debug-db:1.0.0'
}


configurations {
    //all*.exclude module: 'gson'
}

apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'

//apply plugin: 'com.noveogroup.android.check'
//
//check {
//    abortOnError false
//    checkstyle { config easy() }
//    findbugs { config hard() }
//    pmd { config hard() }
//}


apply from: '../tools/dronfiescheck.gradle'
